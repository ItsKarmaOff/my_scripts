name: project_name

env:
  EXECUTABLE:
    binary_name
  WEBHOOK_URL:
    ${{ secrets.DISCORD_WEBHOOK_URL_SECRET }}


on:
  [push, pull_request]

jobs:
  check_coding_style:
    name: Check coding-style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Check coding-style
        run: |
          docker run --rm --security-opt "label:disable" -i -v "$(pwd)":"/mnt/delivery" -v "$(pwd)":"/mnt/reports" ghcr.io/epitech/coding-style-checker:latest "/mnt/delivery" "/mnt/reports" ;
      - name: Display coding-style report
        run: |
          chmod +x .github/workflows/display_codingstyle.sh
          .github/workflows/display_codingstyle.sh
      - name: Notify Discord
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"content": "Check coding-style job completed."}' $WEBHOOK_URL

  check_program_compilation:
      name: Check program compilation
      runs-on: ubuntu-latest
      needs: [check_coding_style]
      container: epitechcontent/epitest-docker:latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4.1.1
        - name: Program compilation
          run: make
        - name: Clean object files
          run: make clean
        - name: Check executable
          run: |
            for executable in $EXECUTABLES; do
              if [ ! -f $executable ]; then
                echo "Missing executable: $executable"
                exit 1
              fi
            done
        - name: Notify Discord
          run: |
            curl -X POST -H "Content-Type: application/json" -d '{"content": "Check program compilation job completed."}' $WEBHOOK_URL

  run_tests:
    name: Run tests
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    needs: [ check_coding_style, check_program_compilation ]
    timeout-minutes: 2
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Run tests
        run: make tests_run
      - name: Notify Discord
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"content": "Run tests job completed."}' $WEBHOOK_URL